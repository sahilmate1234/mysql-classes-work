-- Create Database
CREATE DATABASE University;

USE University;

-- Table 1 – Students**

CREATE TABLE Students (
    Student_ID INT PRIMARY KEY,
    First_Name VARCHAR(50),
    Last_Name VARCHAR(50),
    Gender VARCHAR(10),
    DOB DATE,
    Nationality VARCHAR(50),
    Email VARCHAR(100) UNIQUE,
    Phone_Number VARCHAR(15),
    Address VARCHAR(255),
    Enrollment_Year INT
);

INSERT INTO Students VALUES
(1, 'Amit', 'Sharma', 'Male', '2002-05-14', 'Indian', 'amit.sharma@example.com', '9876543210', 'Delhi', 2020),
(2, 'Priya', 'Verma', 'Female', '2001-08-20', 'Indian', 'priya.verma@example.com', '9123456780', 'Mumbai', 2019);

SELECT * FROM Students;
SELECT First_Name, Last_Name FROM Students WHERE Enrollment_Year = 2020;
SELECT Gender, COUNT(*) AS Total FROM Students GROUP BY Gender;

TRUNCATE TABLE Students;
DROP TABLE Students;

-- table 2 – Departments**

CREATE TABLE Departments (
    Dept_ID INT PRIMARY KEY,
    Dept_Name VARCHAR(100) NOT NULL,
    Head_Of_Dept VARCHAR(100),
    Established_Year INT,
    Building VARCHAR(50),
    Contact_Number VARCHAR(15),
    Email VARCHAR(100),
    Total_Faculty INT,
    Total_Students INT,
    Website VARCHAR(100)
);

INSERT INTO Departments VALUES
(101, 'Computer Science', 'Dr. Neha Gupta', 2000, 'Block A', '9876501234', 'csdept@example.com', 25, 500, 'www.csdept.com'),
(102, 'Mechanical Engineering', 'Dr. Rajesh Kumar', 1995, 'Block B', '9876505678', 'mechdept@example.com', 20, 400, 'www.mechdept.com');

SELECT * FROM Departments;
SELECT Dept_Name, Total_Students FROM Departments WHERE Total_Students > 450;
SELECT AVG(Total_Faculty) AS Avg_Faculty FROM Departments;

TRUNCATE TABLE Departments;
DROP TABLE Departments;

-- Table 3 – Faculty**

CREATE TABLE Faculty (
    Faculty_ID INT PRIMARY KEY,
    First_Name VARCHAR(50),
    Last_Name VARCHAR(50),
    Gender VARCHAR(10),
    DOB DATE,
    Dept_ID INT,
    Designation VARCHAR(50),
    Hire_Date DATE,
    Salary DECIMAL(10,2),
    Email VARCHAR(100),
    FOREIGN KEY (Dept_ID) REFERENCES Departments(Dept_ID)
);

INSERT INTO Faculty VALUES
(1, 'Neha', 'Gupta', 'Female', '1975-03-10', 101, 'Professor', '2005-06-12', 95000.00, 'neha.gupta@example.com'),
(2, 'Rajesh', 'Kumar', 'Male', '1970-09-22', 102, 'Professor', '2000-07-01', 98000.00, 'rajesh.kumar@example.com');

SELECT * FROM Faculty;
SELECT First_Name, Last_Name FROM Faculty WHERE Dept_ID = 101;
SELECT Dept_ID, COUNT(*) AS Faculty_Count FROM Faculty GROUP BY Dept_ID;

TRUNCATE TABLE Faculty;
DROP TABLE Faculty;

-- Table 4 – Courses**

CREATE TABLE Courses (
    Course_ID INT PRIMARY KEY,
    Course_Name VARCHAR(100),
    Dept_ID INT,
    Credits INT,
    Semester VARCHAR(20),
    Duration_Months INT,
    Mode VARCHAR(50),
    Capacity INT,
    Fee DECIMAL(10,2),
    Instructor VARCHAR(100),
    FOREIGN KEY (Dept_ID) REFERENCES Departments(Dept_ID)
);

INSERT INTO Courses VALUES
(201, 'Data Structures', 101, 4, 'Semester 3', 6, 'Offline', 60, 15000.00, 'Dr. Neha Gupta'),
(202, 'Thermodynamics', 102, 4, 'Semester 3', 6, 'Offline', 50, 14000.00, 'Dr. Rajesh Kumar');

SELECT * FROM Courses;
SELECT Course_Name, Fee FROM Courses WHERE Fee > 14500;
SELECT Dept_ID, COUNT(*) AS Course_Count FROM Courses GROUP BY Dept_ID;

TRUNCATE TABLE Courses;
DROP TABLE Courses;

-- Table 5 – Enrollments**

CREATE TABLE Enrollments (
    Enrollment_ID INT PRIMARY KEY,
    Student_ID INT,
    Course_ID INT,
    Enrollment_Date DATE,
    Status VARCHAR(50),
    Grade VARCHAR(5),
    Semester VARCHAR(20),
    Attendance_Percentage DECIMAL(5,2),
    Exam_Date DATE,
    Remarks VARCHAR(255),
    FOREIGN KEY (Student_ID) REFERENCES Students(Student_ID),
    FOREIGN KEY (Course_ID) REFERENCES Courses(Course_ID)
);

INSERT INTO Enrollments VALUES
(301, 1, 201, '2020-07-10', 'Active', 'A', 'Semester 3', 92.50, '2020-12-10', 'Excellent'),
(302, 2, 202, '2019-07-15', 'Completed', 'B+', 'Semester 3', 85.00, '2019-12-15', 'Good');

SELECT * FROM Enrollments;
SELECT Student_ID, Grade FROM Enrollments WHERE Grade = 'A';
SELECT Status, COUNT(*) AS Count_Status FROM Enrollments GROUP BY Status;

TRUNCATE TABLE Enrollments;
DROP TABLE Enrollments;

-- Table 6 – Examinations**

CREATE TABLE Examinations (
    Exam_ID INT PRIMARY KEY,
    Course_ID INT,
    Exam_Date DATE,
    Exam_Type VARCHAR(50),
    Total_Marks INT,
    Passing_Marks INT,
    Duration_Minutes INT,
    Room_Number VARCHAR(10),
    Invigilator VARCHAR(100),
    Remarks VARCHAR(255),
    FOREIGN KEY (Course_ID) REFERENCES Courses(Course_ID)
);

INSERT INTO Examinations VALUES
(401, 201, '2020-12-10', 'Written', 100, 40, 180, 'A101', 'Prof. Mehta', 'Final Exam'),
(402, 202, '2019-12-15', 'Written', 100, 40, 180, 'B202', 'Prof. Sharma', 'Final Exam');

SELECT * FROM Examinations;
SELECT Course_ID, Exam_Type FROM Examinations WHERE Total_Marks = 100;
SELECT Exam_Type, COUNT(*) AS Exam_Count FROM Examinations GROUP BY Exam_Type;

TRUNCATE TABLE Examinations;
DROP TABLE Examinations;

-- Table 7 – Results**

CREATE TABLE Results (
    Result_ID INT PRIMARY KEY,
    Exam_ID INT,
    Student_ID INT,
    Marks_Obtained INT,
    Grade VARCHAR(5),
    Result_Date DATE,
    Status VARCHAR(50),
    Remarks VARCHAR(255),
    Revaluation_Requested BOOLEAN,
    Certificate_Issued BOOLEAN,
    FOREIGN KEY (Exam_ID) REFERENCES Examinations(Exam_ID),
    FOREIGN KEY (Student_ID) REFERENCES Students(Student_ID)
);

INSERT INTO Results VALUES
(501, 401, 1, 88, 'A', '2020-12-20', 'Pass', 'Excellent performance', FALSE, TRUE),
(502, 402, 2, 76, 'B+', '2019-12-25', 'Pass', 'Good effort', FALSE, TRUE);

SELECT * FROM Results;
SELECT Student_ID, Marks_Obtained FROM Results WHERE Status = 'Pass';
SELECT Grade, COUNT(*) AS Grade_Count FROM Results GROUP BY Grade;

TRUNCATE TABLE Results;
DROP TABLE Results;


-- Table 8 – Library**

CREATE TABLE Library (
    Book_ID INT PRIMARY KEY,
    Title VARCHAR(150),
    Author VARCHAR(100),
    Publisher VARCHAR(100),
    Year_Published INT,
    ISBN VARCHAR(20),
    Category VARCHAR(50),
    Quantity INT,
    Rack_Number VARCHAR(10),
    Dept_ID INT,
    FOREIGN KEY (Dept_ID) REFERENCES Departments(Dept_ID)
);

INSERT INTO Library VALUES
(601, 'Database Systems', 'Raghu Ramakrishnan', 'McGraw-Hill', 2014, '9780078022159', 'Computer Science', 10, 'R1', 101),
(602, 'Engineering Thermodynamics', 'P.K. Nag', 'McGraw-Hill', 2013, '9780070151314', 'Mechanical', 8, 'R2', 102);

SELECT * FROM Library;
SELECT Title, Author FROM Library WHERE Dept_ID = 101;
SELECT Category, COUNT(*) AS Book_Count FROM Library GROUP BY Category;

TRUNCATE TABLE Library;
DROP TABLE Library;


-- Table 9 – Hostel**

CREATE TABLE Hostel (
    Hostel_ID INT PRIMARY KEY,
    Hostel_Name VARCHAR(100),
    Warden_Name VARCHAR(100),
    Capacity INT,
    Location VARCHAR(100),
    Contact_Number VARCHAR(15),
    No_of_Floors INT,
    Mess_Facility BOOLEAN,
    Established_Year INT,
    Fees_Per_Year DECIMAL(10,2)
);

INSERT INTO Hostel VALUES
(701, 'Boys Hostel', 'Mr. Ramesh', 200, 'North Campus', '9988776655', 4, TRUE, 1998, 45000.00),
(702, 'Girls Hostel', 'Mrs. Sunita', 150, 'South Campus', '9977665544', 3, TRUE, 2000, 47000.00);

SELECT * FROM Hostel;
SELECT Hostel_Name, Capacity FROM Hostel WHERE Fees_Per_Year > 46000;
SELECT Mess_Facility, COUNT(*) AS Count_Hostels FROM Hostel GROUP BY Mess_Facility;

TRUNCATE TABLE Hostel;
DROP TABLE Hostel;

-- Table 10 – Staff**

CREATE TABLE Staff (
    Staff_ID INT PRIMARY KEY,
    First_Name VARCHAR(50),
    Last_Name VARCHAR(50),
    Gender VARCHAR(10),
    DOB DATE,
    Designation VARCHAR(50),
    Dept_ID INT,
    Hire_Date DATE,
    Salary DECIMAL(10,2),
    Contact_Number VARCHAR(15),
    FOREIGN KEY (Dept_ID) REFERENCES Departments(Dept_ID)
);

INSERT INTO Staff VALUES
(801, 'Ravi', 'Kumar', 'Male', '1985-02-15', 'Clerk', 101, '2010-03-01', 30000.00, '9988223344'),
(802, 'Sunita', 'Devi', 'Female', '1980-11-05', 'Lab Assistant', 102, '2008-07-15', 32000.00, '9911223344');

SELECT * FROM Staff;
SELECT First_Name, Last_Name FROM Staff WHERE Salary > 31000;
SELECT Dept_ID, COUNT(*) AS Staff_Count FROM Staff GROUP BY Dept_ID;

TRUNCATE TABLE Staff;
DROP TABLE Staff;
